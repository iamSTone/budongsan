library(roxygen2)
install()
install.packages("roxygen2")
library(data.table)
install.packages("devtools")
library(roxygen2)
document
document()
document()
library(devtools)
document()
install()
hello()
library(Budongsan)
hello
hello()
hello()
library(Budongsan)
hello()
library(Budongsan)
document()
install()
hello()
library(gdata)
install.package(gdata)
install.packages(gdata)
install.packages("gdata")
install.packages("data.table")
exists("data/source/molit/montly/apt.rent.201601.xls")
exists("./data/source/molit/montly/apt.rent.201601.xls")
file.exists("./data/source/molit/montly/apt.rent.201601.xls")
exists("./data/source/molit/montly/apt.rent.201601.xls")
library(data.table)
molit.data.exists <- function(fileName, pathPrefix = "data/source/molit/monthly/"){
library(gdata)
)
library(gdata)
library(data.table)
sheetNames("data/source/molit/montly/apt.rent.201601.xls")
as.integer("2016")
error("TEST")
if(T) stop("TEST")
paste(123, "@34")
list.files("data/source/molit/montly/")
files <- list.files("data/source/molit/montly/")
grepl("", files)
grepl("^201601", files)
as.integer()
as.integer(NULL)
as.integer(NULL) > 12
molit.data.convertToData <- function(year, month, pathPrefix = "data/source/molit/monthly/"){
}
molit.data.convertToData <- function(year, month, pathPrefix = "data/source/molit/monthly/"){
year <- as.integer(year)
month <- as.integer(month)
if(year < 2016) stop(paste(year, "must be greater than 2016"))
if(month > 12) stop(paste(month, "must be less than 12"))
filePrefix <- paste0(year, month)
sourceFiles <- list.files(pathPrefix)
}
pathPrefix = "data/source/molit/monthly/"
year = 2016
month = 02
filePrefix <- paste0(year, month)
sourceFiles <- list.files(pathPrefix)
targetFiles <- sourceFiles[grepl(paste0("^", filePrefix))]
targetFiles <- sourceFiles[grepl(paste0("^", filePrefix))]
filePrefix
month
as.character(month)
length(as.character(month))
size(as.character(month))
library(stringr)
str_pad(month, 2, pad = "0")
month
month <- str_pad(month, 2, pad = "0")
filePrefix <- paste0(year, month)
sourceFiles <- list.files(pathPrefix)
targetFiles <- sourceFiles[grepl(paste0("^", filePrefix))]
targetFiles <- sourceFiles[grepl(paste0("^", filePrefix), sourceFiles)]
targetFiles
sourceFiles
sourceFiles <- list.files(pathPrefix)
pathPrefix
list.files(pathPrefix)
list.files("data/source/molit/montly/")
list.files("data/source/molit/monthly/")
list.files("data/source/molit/montly/")
sourceFiles <- list.files(pathPrefix)
targetFiles <- sourceFiles[grepl(paste0("^", filePrefix), sourceFiles)]
targetFiles
grepl(".xls^", targetFiles)
grepl(".xls", targetFiles)
trgetFiles[1]
targetFiles[1]
first <- targetFiles[1]
sheetNames(first)
first
sheetNames(paste0(pathPrefix, first))
targetPathes <- paste0(pathPrefix, sourceFiles[grepl(paste0("^", filePrefix), sourceFiles)])
targetPathes
first <- targetPathes[1]
result <- read.xls(first, sheet = "제주특별자치도", skip=4, head=T)
result <- read.xls(first, sheet = "경상남도", skip=4, head=T)
library(data.table)
ns <- sheetNames(first)
result <- read.xls(first, sheet = ns[5], skip=4, head=T)
ns
first
read.xls(first, sheet = ns[3], skip=5, head=T, ...)
read.xls(first, sheet = ns[3], skip=5, header=T, ...)
read.xls(first, sheet = ns[3], skip=5, header=T)
read.xls(first, sheetName = ns[3], skip=5, header=T)
ressult
result
result <- read.xls2(first, sheetName = ns[3], skip=5, header=T)
read.xlsx2
library(readxl)
install.packages("readxl")
library(readxl)
data <- read_excel(first, sheet = 5)
data
result(data)
str(data)
data <- read_excel(first, sheet = 5, skip = 5, header = T)
data <- read_excel(first, sheet = 5, skip = 5)
data
str(data)
data <- read_excel(first, sheet = 5, skip = 6)
data
str(data)
data <- read_excel(first, sheet = 5, skip = 3)
data
head(data)
data <- read_excel(first, sheet = 5, skip = 5)
head(data)
data <- read_excel(first, sheet = 5, skip = 7)
head(data)
str(data)
length(data)
count(data)
nrow(data)
result <- read.xls(first, sheetName = ns[3], skip=5, header=T)
result
result
result
data
colnames(data)
save(data, file="test.rda")
result <- load("test.rda")
result
data <- read_excel(first, sheet = 5, skip = 7)
data
colnames(data)
data.frame(data)
data <- as.data.frame(data)
class(data)
save(data, file="test.rda")
load("test.rda")
result <- load("test.rda")
result
write.table(data, file="test.rda")
load("test.rda")
result <- load("test.rda")
library(devtools)
devtools::use_data(data, overwrite = T)
result <- load("data/data.rda")
result
data
str(data)
result
abc <- data
devtools::use_data(abc, overwrite = T)
result m- load("data/abc.rda")
result <- load("data/abc.rda")
result
save(data, file="test.rda", ascii = F)
load("test.rda")
result <- load("test.rda")
result
save
result
load("~/workspace/Budongsan/data/data.rda")
data
abc
abc
abc
abc <- null
abc <- NA
abc
abc
load("~/workspace/Budongsan/data/abc.rda")
abc
abc
data
name = "test"
assign(name, data)
name
test
save(test, "test.rda")
save(test, file = "test.rda")
test
test <- NA
test
load("test.rda")
test
first
excel_sheets(first)
excel_sheets("./data-raw/molit/monthly/201601.apt.rent.xls")
year
month
month = 2
pathPrefix = "data-raw/molit/monthly/"
year <- as.integer(year)
month <- as.integer(month)
month <- str_pad(month, 2, pad = "0")
filePrefix <- paste0(year, month)
sourceFiles <- list.files(pathPrefix)
targetPathes <- paste0(pathPrefix, sourceFiles[grepl(paste0("^", filePrefix), sourceFiles)])
targetPathes
targetPathes[1]
for(targetFile in targetPathes){
}
first <- targetPathes[1]
grepl(".apt,", first)
grepl(".apt.", first)
ifelse(grepl(".apt.", first), "아파트", "ㅆㄸㄴㅆ")
target <- first
type <- ifelse(grepl(".apt.", target), "아파트",
ifelse(grepl(".rh.", target), "연립/다세대",
ifelse(grepl(".sh.", target), "단독/다가구",
stop(paste(target, "is not supported file name."))
)
)
)
type
target
a <- data.frame(a = 1, b = 2)
a
b <- data.frame(c = 3, d = 3)
rbind(a, b)
rbind(data.table(a), data.table(b))
rbind(data.table(a), data.table(b), fill=R)
rbind(data.table(a), data.table(b), fill=T)
rbind(a, b, fill=T)
a
b
excel_sheets(target)
data
data$type <- "아파트"
ㅇㅁㅅㅁ
data
data$type
result <- read_excel(target, sheet = "서울특별시", skip = 7)
result
str(restul)
str(result)
molit.data.convertToData <- function(year, month, pathPrefix = "data-raw/molit/monthly/"){
year <- as.integer(year)
month <- as.integer(month)
if(year < 2016) stop(paste(year, "must be greater than 2016"))
if(month > 12) stop(paste(month, "must be less than 12"))
month <- str_pad(month, 2, pad = "0")
filePrefix <- paste0(year, month)
sourceFiles <- list.files(pathPrefix)
targetPathes <- paste0(pathPrefix, sourceFiles[grepl(paste0("^", filePrefix), sourceFiles)])
result <- data.table()
for(target in targetPathes){
type <- ifelse(grepl(".apt.", target), "아파트",
ifelse(grepl(".rh.", target), "연립/다세대",
ifelse(grepl(".sh.", target), "단독/다가구",
stop(paste(target, "is not supported file name."))
)
)
)
sheetNames <- excel_sheets(target)
for(sheet in sheetNames){
sheetData <- data.table(read_excel(target, sheet = sheet, skip = 7))
sheetData$type <- type
result <- rbind(result, sheetData, fill=T)
}
}
result
}
result <- molit.data.convertToData(2016, 8)
result
result$타입 <- "안녕"
str(result)
result$주택유형
result[!is.na(result$주택유형)
]
result[!is.na(result$주택유형)]$주택유형
unique(result[!is.na(result$주택유형)]$주택유형
)
